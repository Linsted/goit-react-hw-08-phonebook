{"version":3,"file":"static/js/817.26ce095d.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.jsx","components/PhonebookForm/PhoneBook.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/SignUp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  font-style: italic;\n  font-family: 'Lobster', cursive;\n  letter-spacing: 4px;\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center;\n  color: #333;\n`;\n\nexport const WrapperStyled = styled.div`\n  width: 800px;\n  margin-inline: auto;\n  background-color: rgba(248, 248, 255, 0.7);\n  border-radius: 16px;\n  margin-top: 48px;\n  box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.75);\n  padding-top: 20px;\n`;\n\nexport const ContactsInfoStyled = styled.div`\n  padding: 30px 90px;\n  border-radius: 16px;\n  border: 1px solid #ccc;\n  font-size: 18px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0;\n`;\n\nexport const WrapperSpinnerStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  padding: 30px 90px;\n  border-radius: 16px;\n  border: 1px solid #ccc;\n  font-size: 18px;\n`;\nexport const FieldStyled = styled(Field)`\n  padding: 10px;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 5px;\n  box-shadow: none;\n  transition: all 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: #0077cc;\n    box-shadow: 0 0 0 2px rgba(0, 119, 204, 0.3);\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-family: roboto;\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: #0077cc;\n  color: #fff;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background-color: #005ea6;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 800px;\n  gap: 10px;\n  margin-inline: auto;\n  background-color: rgba(248, 248, 255, 0.7);\n  padding: 20px 0;\n  box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.75);\n  border-radius: 16px;\n  overflow-x: auto;\n  margin-top: 48px;\n\n  border-radius: 16px;\n  border: 1px solid #ccc;\n  font-size: 18px;\n`;\n\nexport const InputStyledName = styled(Field)`\n  padding: 10px;\n  width: 27vw;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 5px;\n  box-shadow: none;\n  transition: all 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: #0077cc;\n    box-shadow: 0 0 0 2px rgba(0, 119, 204, 0.3);\n  }\n  &:focus::placeholder {\n    opacity: 0;\n  }\n  &::placeholder {\n    color: #999;\n  }\n  ${({ error }) => (error === 'false' ? error : 'border: 1px solid red;')};\n`;\n\nexport const InputStyledMail = styled(Field)`\n  padding: 10px;\n  width: 27vw;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 5px;\n  box-shadow: none;\n  transition: all 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: #0077cc;\n    box-shadow: 0 0 0 2px rgba(0, 119, 204, 0.3);\n  }\n  &:focus::placeholder {\n    opacity: 0;\n  }\n  &::placeholder {\n    color: #999;\n  }\n  ${({ error }) => (error === 'false' ? error : 'border: 1px solid red;')};\n`;\n\nexport const InputStyledPassword = styled(Field)`\n  width: 27vw;\n  padding: 10px;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 5px;\n  box-shadow: none;\n  transition: all 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: #0077cc;\n    box-shadow: 0 0 0 2px rgba(0, 119, 204, 0.3);\n  }\n  &:focus::placeholder {\n    opacity: 0;\n  }\n  &::placeholder {\n    color: #999;\n  }\n  ${({ error }) => (error === 'false' ? error : 'border: 1px solid red;')};\n`;\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-family: roboto;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  InputStyledName,\n  LabelStyled,\n  InputStyledMail,\n  InputStyledPassword,\n  FormStyled,\n} from './RegisterForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'components/PhonebookForm/PhoneBook.styled';\nimport { Title } from 'components/Contacts/Contacts.styled';\nimport { FcLeave } from 'react-icons/fc';\nimport { getIasLoggedInSelector } from 'redux/auth/allSelectors';\n\nexport const RegisterForm = () => {\n  const [errorValidationName, setErrorValidationName] = useState(false);\n  const [errorValidationMail, setErrorValidationMail] = useState(false);\n  const [errorValidationPassword, setErrorValidationPassword] = useState(false);\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(getIasLoggedInSelector);\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(() => {}),\n    email: Yup.string()\n      .email(() => {})\n      .required(() => {}),\n    password: Yup.string().required(() => {}),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (!values.name || !values.email || !values.password) {\n      toast.error(`Please fill in all fields!`, { duration: 1500 });\n\n      !values.name\n        ? setErrorValidationName(true)\n        : setErrorValidationName(false);\n      !values.email\n        ? setErrorValidationMail(true)\n        : setErrorValidationMail(false);\n      !values.password\n        ? setErrorValidationPassword(true)\n        : setErrorValidationPassword(false);\n\n      return;\n    }\n\n    setErrorValidationName(false);\n    setErrorValidationMail(false);\n    setErrorValidationPassword(false);\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Toaster />\n      <Formik\n        validationSchema={validationSchema}\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <FormStyled>\n            <Title>Registration form</Title>\n            <LabelStyled htmlFor=\"name\">\n              Your name\n              <InputStyledName\n                placeholder=\"Enter  your name\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                error={errorValidationName.toString()}\n              />\n              <ErrorMessage name=\"name\" />\n            </LabelStyled>\n\n            <LabelStyled htmlFor=\"email\">\n              Your e-mail\n              <InputStyledMail\n                placeholder=\"Enter  your e-mail\"\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                error={errorValidationMail.toString()}\n              />\n              <ErrorMessage name=\"email\" />\n            </LabelStyled>\n\n            <LabelStyled htmlFor=\"password\">\n              Your password\n              <InputStyledPassword\n                placeholder=\"Enter  your password\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                error={errorValidationPassword.toString()}\n              />\n              <ErrorMessage name=\"password\" />\n            </LabelStyled>\n            {isLoggedIn && (\n              <p style={{ color: 'red', fontSize: '22px' }}>\n                <FcLeave /> Please note that you already have an account.\n              </p>\n            )}\n            <Button type=\"submit\">Create account</Button>\n          </FormStyled>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\n\n\n\nconst SignUp = () => {\n\n\n    return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n\n};\nexport default SignUp;"],"names":["Title","styled","WrapperStyled","ContactsInfoStyled","List","WrapperSpinnerStyled","FormStyled","Form","FieldStyled","Field","Label","Button","InputStyledName","error","InputStyledMail","InputStyledPassword","LabelStyled","RegisterForm","useState","errorValidationName","setErrorValidationName","errorValidationMail","setErrorValidationMail","errorValidationPassword","setErrorValidationPassword","dispatch","useDispatch","isLoggedIn","useSelector","getIasLoggedInSelector","validationSchema","Yup","shape","name","required","email","password","initialValues","onSubmit","values","resetForm","toast","duration","register","htmlFor","placeholder","type","id","toString","style","color","fontSize","Helmet"],"sourceRoot":""}