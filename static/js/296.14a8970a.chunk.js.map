{"version":3,"file":"static/js/296.14a8970a.chunk.js","mappings":"sQAEaA,EAAOC,EAAAA,EAAAA,GAAH,kKAWJC,EAASD,EAAAA,EAAAA,OAAH,4PAcNE,EAAaF,EAAAA,EAAAA,KAAH,gD,UCxBVG,EAAcH,EAAAA,EAAAA,IAAH,sNAaXI,EAAqBJ,EAAAA,EAAAA,IAAH,6IAOlBK,EAAkBL,EAAAA,EAAAA,EAAH,uFAMfM,EAAoBN,EAAAA,EAAAA,OAAH,kT,mBCvBjBO,EAAc,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,aAGpCC,GAAyBC,EAAAA,EAAAA,cAAY,SAACC,GACpCA,EAAMC,SAAWD,EAAME,eAAeL,GAC7C,GAAE,CAACA,IAaJ,OAXAM,EAAAA,EAAAA,YAAU,WAGN,OAFAC,OAAOC,iBAAiB,YAAaP,GAE9B,WACHM,OAAOE,oBAAoB,YAAaR,EAC3C,CAEJ,GAAE,CAACA,KAIGS,EAAAA,EAAAA,eAEH,SAACjB,EAAD,CAAakB,QAAUV,EAAvB,UACY,UAACP,EAAD,YACI,SAACC,EAAD,6DACA,SAACC,EAAD,CAAmBe,QAASX,EAA5B,qBACA,SAACJ,EAAD,CAAmBe,QAAS,kBAAKZ,EAAaD,EAAlB,EAA5B,yBAESc,SAASC,cAAc,eAGvD,EC3BYC,EAAW,SAAC,GAAuD,IAAD,IAApDC,QAAWC,EAAyC,EAAzCA,KAAcC,EAA2B,EAAnCC,OAAepB,EAAoB,EAApBA,GAAMa,EAAc,EAAdA,QAC7D,GAAgDQ,EAAAA,EAAAA,WAAS,GAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KAYMC,EAAQ,CACVxB,GAAAA,EACAE,aAViB,WACjBqB,GAAoB,EACvB,EASGtB,aARiB,SAACD,GAClBuB,GAAoB,GACpBV,EAAQb,EACX,GAQD,OACI,iCACI,UAACT,EAAD,YACI,SAACG,EAAD,UAAawB,KACb,SAACxB,EAAD,UAAayB,KACb,SAAC1B,EAAD,CAAQgC,KAAK,SAASZ,QAAS,kBAAMU,GAAoB,EAA1B,EAA/B,uBAEHD,IAAoB,SAACvB,GAAD,UAAiByB,MAGjD,ECnCYE,EAAOlC,EAAAA,EAAAA,GAAH,0G,mBCKJmC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEhBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,+BAEI,SAACJ,EAAD,UAAOE,EAASG,KAAI,SAAAd,GAAO,OAAI,SAACD,EAAD,CAA2BC,QAASA,EAASJ,QAAS,WAAKgB,GAASG,EAAAA,EAAAA,IAAcf,EAAQjB,IAAK,GAAhFiB,EAAQjB,GAA3B,OAGtC,E,SCdYiC,EAAQzC,EAAAA,EAAAA,MAAH,iKASL0C,EAAc1C,EAAAA,EAAAA,MAAH,8YAyBX2C,GAAa3C,EAAAA,EAAAA,GAAO4C,EAAAA,IAAP5C,CAAH,qE,UC/BV6C,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEvBT,GAAWC,EAAAA,EAAAA,MAIjB,OACI,UAACG,EAAD,sFAA8E,SAACE,EAAD,KAC1E,SAACD,EAAD,CAAaK,YAAY,eAAed,KAAK,OAAOP,KAAK,SAASsB,SAAU,SAACC,GACzEZ,GAASa,EAAAA,EAAAA,IAAcD,EAAInC,OAAOqC,OACrC,EAAEA,MAAOL,MAGrB,E,oBChBYM,GAAapD,EAAAA,EAAAA,GAAOqD,EAAAA,GAAPrD,CAAH,2IASVsD,GAActD,EAAAA,EAAAA,GAAOuD,EAAAA,GAAPvD,CAAH,wUAkBXyC,EAAQzC,EAAAA,EAAAA,MAAH,sHAOLC,EAASD,EAAAA,EAAAA,OAAH,oR,sBC1BbwD,IAAkBC,EAAAA,EAAAA,MAASC,MAAM,CACnChC,MAAMiC,EAAAA,EAAAA,MAASC,WACfjC,OAAOgC,EAAAA,EAAAA,MAASC,aAQPC,GAAgB,WAGzB,IAAMzB,GAAW0B,EAAAA,EAAAA,IAAYC,GAAAA,IACvB1B,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAAC,KAAD,CACI0B,iBAAkBR,GAClBS,cAAe,CACXvC,KAAM,GACNC,MAAO,IACXuC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAEXC,EAAkBjC,EAASU,QAAO,YAAc,OAAF,EAAVpB,OAA4ByC,EAAOzC,IAAM,IAEnF,GAAI2C,EAAgBC,OAAS,EAQzB,OAPAC,GAAAA,GAAAA,MAAA,UAAeJ,EAAOzC,KAAtB,aACAW,GAASmC,EAAAA,EAAAA,IAAc,CACnBhE,GAAI6D,EAAgB,GAAG7D,GACvBkB,KAAMyC,EAAOzC,KACbE,OAAOuC,EAAOxC,cAElByC,IAIJ/B,GAASoC,EAAAA,EAAAA,KAAW,UAAKN,KACzBC,GACH,EAtBL,UAwBI,UAAChB,EAAD,YACK,SAAC,MAAD,KACD,UAAC,EAAD,mBACI,SAACE,EAAD,CAAaP,YAAY,mBAAmBrB,KAAK,aAErD,UAAC,EAAD,oBAEI,SAAC4B,EAAD,CACIP,YAAY,oBACZd,KAAK,QACLP,KAAK,QACLgD,QAAQ,yFACRC,MAAM,qGAIlB,SAAC,EAAD,CAAQ1C,KAAK,SAAb,6BAIX,ECtDY2C,IAhBU5E,EAAAA,EAAAA,QAAH,oUAgBCA,EAAAA,EAAAA,GAAH,yJAUL6E,GAAgB7E,EAAAA,EAAAA,IAAH,6NAWb8E,GAAqB9E,EAAAA,EAAAA,IAAH,+HCwB/B,GApDqB,WAKnB,IAAMqC,GAAWC,EAAAA,EAAAA,MACXF,GAAW0B,EAAAA,EAAAA,IAAYC,GAAAA,IACvBjB,GAASgB,EAAAA,EAAAA,IAAYiB,EAAAA,IACrBC,GAAYlB,EAAAA,EAAAA,IAAYmB,GAAAA,IACxBC,GAAQpB,EAAAA,EAAAA,IAAYqB,GAAAA,KAE1BnE,EAAAA,EAAAA,YAAU,WAERqB,GAAS+C,EAAAA,EAAAA,MACV,GAAE,CAAC/C,IAOJ,IAAMgD,EAAoBvC,EAAOwC,cAC3BC,EAAmBnD,EAASU,QAAO,SAAArB,GAAO,OAAIA,EAAQC,KAAK4D,cAAcE,SAASH,EAAxC,IAIhD,OAAQ,iCAGJ,UAACR,GAAD,YAEE,SAACD,GAAD,yBAEA,SAAEf,GAAF,QAGJ,UAACgB,GAAD,YAEE,SAACD,GAAD,wBACA,UAACE,GAAD,YACE,SAAEjC,EAAF,CACEC,OAAQA,IAETkC,IAAcE,IAAS,mDACxB,SAAE/C,EAAF,CACEC,SAAUmD,YAMnB,C","sources":["components/Contacts/ListItem.styled.jsx","components/ModalWindow/ModalWindow.styled.jsx","components/ModalWindow/ModalWindow.jsx","components/Contacts/Listitem.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/FilterContacts/FilterContacts.styled.jsx","components/FilterContacts/FilterContacts.jsx","components/PhonebookForm/PhoneBook.styled.jsx","components/PhonebookForm/PhonebookForm.jsx","components/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex; \n  justify-content: space-between; \n  align-items: center; \n  padding: 8px; \n  border-bottom: 1px solid #ccc;\n\n  \n`\n\n\nexport const Button = styled.button`\n    background-color: #dc3545; \n  color: #fff; \n  border: none; \n  border-radius: 4px; \n  padding: 8px 20px; \n  cursor: pointer; \n  transition: background-color 0.3s ease;\n\n  &:hover {\n  background-color: #c82333; \n}\n`\n\nexport const SpanStyled = styled.span`\n    margin-right: 8px;\n`;\n\n","import styled from '@emotion/styled';\n\n\nexport const ModalStyled = styled.div`\n     position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n\nexport const ModalContentStyled = styled.div`\n   background-color: #fff;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n`;\n\nexport const ModalTextStyled = styled.p`\n  margin: 0 0 20px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const ModalButtonStyled = styled.button`\n   background-color: #dc3545; \n  color: #fff; \n  border: none; \n  border-radius: 4px; \n  padding: 8px 20px; \n  cursor: pointer; \n  transition: background-color 0.3s ease;\n  &:nth-last-of-type(2){\n    margin-right: 8px;\n  }\n\n  &:hover {\n  background-color: #c82333; \n}\n`;","\nimport { useCallback, useEffect } from \"react\";\nimport { ModalStyled, ModalContentStyled, ModalTextStyled, ModalButtonStyled } from \"./ModalWindow.styled\";\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nexport const ModalWindow = ({id, handleDelete,handleCancel}) => {\n\n    \n    const handleCloseByBackdrope = useCallback((event) => {\n        if (event.target === event.currentTarget) handleCancel()\n    }, [handleCancel]);\n\n    useEffect(() => {\n        window.addEventListener('mousedown', handleCloseByBackdrope);\n\n        return () => {\n            window.removeEventListener('mousedown', handleCloseByBackdrope);\n        };\n\n    }, [handleCloseByBackdrope]);\n    \n   \n    \n    return createPortal (\n        \n        <ModalStyled onClick ={handleCloseByBackdrope}>\n                    <ModalContentStyled>\n                        <ModalTextStyled>Are you sure you want to delete this contact?</ModalTextStyled>\n                        <ModalButtonStyled onClick={handleCancel}>Cancel</ModalButtonStyled>\n                        <ModalButtonStyled onClick={()=> handleDelete(id)}>Delete</ModalButtonStyled>\n                    </ModalContentStyled>\n                </ModalStyled>,  document.querySelector(\"#modal-root\")\n        \n    )\n};\n\nModalWindow.propTypes = {\n    id: PropTypes.string.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    handleCancel: PropTypes.func.isRequired,\n};","import PropTypes from 'prop-types';\nimport { Item, SpanStyled } from './ListItem.styled';\nimport { Button } from './ListItem.styled';\nimport { useState } from 'react';\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow';\n\n\n\nexport const ListItem = ({ contact: { name, number: phone, id }, onClick }) => {\n    const [showConfirmation, setShowConfirmation] = useState(false);\n    \n\n\n    const handleCancel = () => {\n        setShowConfirmation(false);\n    };\n    const handleDelete = (id) => {\n        setShowConfirmation(false);\n        onClick(id)\n    };\n     \n    const props = {\n        id,\n        handleCancel,\n        handleDelete,\n    }\n\n    return (\n        <>\n            <Item>\n                <SpanStyled>{name}</SpanStyled>\n                <SpanStyled>{phone}</SpanStyled>\n                <Button type='button' onClick={() => setShowConfirmation(true)}>Delete</Button>\n            </Item>\n            {showConfirmation && <ModalWindow {...props} />}\n        </>\n    )\n};\n\nListItem.propTypes = {\ncontact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,}).isRequired,\nonClick: PropTypes.func.isRequired,\n}\n\n\n\n","import styled from '@emotion/styled'\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 0;\n`\n\n","import PropTypes from 'prop-types';\nimport { ListItem } from './Listitem';\nimport { List } from './Contacts.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\n\nexport const Contacts = ({contacts}) => {\n  \n    const dispatch = useDispatch();\n\n    return (\n        <>  \n            \n            <List>{contacts.map(contact => <ListItem key={contact.id} contact={contact} onClick={()=>{dispatch(deleteContact(contact.id))}} /> )}</List>\n        </>\n    )\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired,).isRequired,\n   \n}","import styled from '@emotion/styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Label = styled.label`\nposition: relative;\n    display: flex;\n    flex-direction: column;\n    /* width: 200px; */\n    gap: 10px;\n    margin-bottom: 10px;\n`;\n\nexport const InputStyled = styled.input`\npadding: 10px;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 5px;\n  box-shadow: none;\n  transition: all 0.3s ease-in-out;\n  padding-left: 29px;\n\n  &:focus{\n    outline: none;\n  border-color: #0077cc;\n  box-shadow: 0 0 0 2px rgba(0, 119, 204, 0.3);\n  };\n\n  &::placeholder{\n     color: #999;\n\n  };\n&:focus::placeholder {\n  opacity: 0;\n}\n\n`;\n\nexport const IconStyled = styled(BiSearchAlt)`\nposition: absolute;\ntop: 49px;\nleft: 8px;\n`","import PropTypes from 'prop-types';\nimport { Label, InputStyled,IconStyled } from './FilterContacts.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\n\n\nexport const FilterContacts = ({ filter }) => {\n\n    const dispatch = useDispatch();\n\n\n\n    return (\n        <Label> Find contacts in your list. Simply enter the name you're looking for. <IconStyled />\n            <InputStyled placeholder='Contact name' type=\"text\" name='filter' onChange={(evt) => {\n                dispatch(filterContact(evt.target.value))\n            }} value={filter} />\n        </Label>\n    )\n};\n\nFilterContacts.propTypes = {\n    onFilter: PropTypes.func,\n    filter: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled'\nimport { Form, Field } from 'formik'\n\nexport const FormStyled = styled(Form)`\n    \n\n    padding: 30px 90px;\n    border-radius: 16px;\n    border: 1px solid #ccc;\n    font-size: 18px;\n   \n`\nexport const FieldStyled = styled(Field)`\npadding: 10px;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 5px;\n  box-shadow: none;\n  transition: all 0.3s ease-in-out;\n\n  &:focus{\n    outline: none;\n  border-color: #0077cc;\n  box-shadow: 0 0 0 2px rgba(0, 119, 204, 0.3);\n  };\n\n  &::placeholder{\n     color: #999;\n  }\n`\nexport const Label = styled.label`\n   display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-family: roboto;\n`\n\nexport const Button = styled.button`\n  \nwidth: 200px;\npadding: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: #0077cc;\n  color: #fff;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background-color: #005ea6;\n  }\n\n`","import { Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { FormStyled, Label, Button,FieldStyled } from './PhoneBook.styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact, updateContact } from 'redux/operations';\nimport { getContactsFromState } from 'redux/contactsSlice';\nimport toast, { Toaster } from 'react-hot-toast';\n\n\n\n\nconst phoneBookSchema = object().shape({\n    name: string().required(),\n    phone: string().required(),\n});\n\n\n\n\n\n\nexport const PhonebookForm = () => {\n\n\n    const contacts = useSelector(getContactsFromState);\n    const dispatch = useDispatch();\n\n    return (\n        <Formik\n            validationSchema={phoneBookSchema}\n            initialValues={{\n                name: '',\n                phone: ''}}\n            onSubmit={(values, { resetForm }) => {\n                \n                const existingContact = contacts.filter(({name}) => { return name === values.name });\n                \n                if (existingContact.length > 0) {\n                    toast.error(`${values.name} updated`);\n                    dispatch(updateContact({\n                        id: existingContact[0].id,\n                        name: values.name,\n                        number:values.phone,\n                    }))\n                    resetForm();\n                    return;\n                };\n\n                dispatch(addContact({ ...values }));\n                resetForm();\n            }}>\n            \n            <FormStyled>\n                 <Toaster />\n                <Label>Name\n                    <FieldStyled placeholder=\"Add contact name\" name=\"name\"/>\n                </Label>\n                <Label>\n                    Phone\n                    <FieldStyled\n                        placeholder=\"Add contact phone\"\n                        type=\"phone\"\n                        name=\"phone\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"/>\n                </Label>\n\n\n            <Button type=\"submit\">Add contact</Button>\n            </FormStyled>\n        </Formik>\n    )\n}\n\n\n\n","import styled from '@emotion/styled'\n\nexport const Section = styled.section`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-top: 100px;\n    width: 800px;\n    gap: 10px;\n   \n    margin-inline: auto;\n    background-color: #bff5f5;\n    padding: 20px;\n    box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n    border-radius: 8px;\n    overflow-x: auto;\n`\n\nexport const Title = styled.h2`\nfont-style: italic;\n\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: center;\n  color: #333;\n`;\n\nexport const WrapperStyled = styled.div`\n\n    width: 800px;\n    margin-inline: auto;\n    background-color: rgba(248, 248, 255,0.7);\n    border-radius: 16px;\n    margin-top: 48px;\n    box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.75);\n\n`;\n\nexport const ContactsInfoStyled = styled.div`\n     padding: 30px 90px;\n    border-radius: 16px;\n    border: 1px solid #ccc;\n    font-size: 18px;\n`","import { Contacts } from \"../components/Contacts/Contacts\"\nimport { FilterContacts } from \"../components/FilterContacts/FilterContacts\"\nimport { PhonebookForm } from \"../components/PhonebookForm/PhonebookForm\";\nimport { Title, WrapperStyled, ContactsInfoStyled } from \"../components/Contacts.styled\"\nimport { getContactsFromState,getIsLoading, getError } from \"redux/contactsSlice\";\nimport { getFilterState } from \"../../src/redux/filterSlice\";\nimport { fetchContacts } from \"redux/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\n\nconst ContactsPage = () => {\n\n\n\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsFromState);\n  const filter = useSelector(getFilterState);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  \n  useEffect(() => {\n\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n\n  \n\n\n\n  const normalizedRequest = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedRequest));\n\n\n\n  return (<>\n    \n\n      <WrapperStyled>\n\n        <Title>Phonebook</Title>\n        \n        < PhonebookForm />\n      </WrapperStyled>\n        \n    <WrapperStyled>\n      \n      <Title>Contacts</Title>\n      <ContactsInfoStyled>\n        < FilterContacts\n          filter={filter}\n        />\n        {isLoading && !error && <b>Request in progress...</b>}\n        < Contacts\n          contacts={filteredContacts}\n          \n        /></ContactsInfoStyled>\n      </WrapperStyled>\n    \n  </>)\n};\nexport default ContactsPage;"],"names":["Item","styled","Button","SpanStyled","ModalStyled","ModalContentStyled","ModalTextStyled","ModalButtonStyled","ModalWindow","id","handleDelete","handleCancel","handleCloseByBackdrope","useCallback","event","target","currentTarget","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","document","querySelector","ListItem","contact","name","phone","number","useState","showConfirmation","setShowConfirmation","props","type","List","Contacts","contacts","dispatch","useDispatch","map","deleteContact","Label","InputStyled","IconStyled","BiSearchAlt","FilterContacts","filter","placeholder","onChange","evt","filterContact","value","FormStyled","Form","FieldStyled","Field","phoneBookSchema","object","shape","string","required","PhonebookForm","useSelector","getContactsFromState","validationSchema","initialValues","onSubmit","values","resetForm","existingContact","length","toast","updateContact","addContact","pattern","title","Title","WrapperStyled","ContactsInfoStyled","getFilterState","isLoading","getIsLoading","error","getError","fetchContacts","normalizedRequest","toLowerCase","filteredContacts","includes"],"sourceRoot":""}