{"version":3,"file":"static/js/564.7b2628d0.chunk.js","mappings":"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","sources":["components/Contacts/ListItem.styled.jsx","components/Contacts/Listitem.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/FilterContacts/FilterContacts.styled.jsx","components/FilterContacts/FilterContacts.jsx","components/PhonebookForm/FormStyled.styled.jsx","components/PhonebookForm/PhonebookForm.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Item = styled.li`\n    display: flex;\n    gap: 10px;\n`\n\nexport const Button = styled.button`\n     width: 100px;\n     padding: 0px;\n\n    background-color: #FFFFFF;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    border-radius: .25rem;\n    box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\n    cursor: pointer;\n    :hover {\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\n    color: rgba(0, 0, 0, 0.65);}\n`","import PropTypes from 'prop-types';\nimport { Item } from './ListItem.styled';\nimport { Button } from './ListItem.styled';\n\nexport const ListItem = ({ contact : {name, number: phone, id}, onClick }) => {\n    \n    \n    return (\n        <Item>\n            <span>{ name.length < 15 ? name :`${name.slice(0, 12)}...`}</span>\n            <span>{phone}</span>\n            <Button type='button' onClick={()=>onClick(id)}>Delete</Button>\n        </Item>\n    )\n}\n\nListItem.propTypes = {\ncontact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,}).isRequired,\nonClick: PropTypes.func.isRequired,\n}","import styled from '@emotion/styled'\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`","import PropTypes from 'prop-types';\nimport { ListItem } from './Listitem';\nimport { List } from './Contacts.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\n\n\nexport const Contacts = ({contacts}) => {\n  \n\n    const dispatch = useDispatch();\n    \n\n    return (\n        <div>  \n            <List>{contacts.map(contact => <ListItem key={contact.id} contact={contact} onClick={()=>{dispatch(deleteContact(contact.id))}} /> )}</List>\n        </div>\n    )\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object.isRequired,).isRequired,\n   \n}","import styled from '@emotion/styled'\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    gap: 10px;\n    margin-bottom: 10px;\n`","import PropTypes from 'prop-types';\nimport { Label } from './FilterContacts.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\n\n\nexport const FilterContacts = ({ onFilter, filter }) => {\n\n    const dispatch = useDispatch();\n\n\n\n    return (\n        <Label> Find contacts by name\n            <input type=\"text\" name='filter' onChange={(evt) => {\n                // console.log(evt.target.value)\n                dispatch(filterContact(evt.target.value))\n            }} value={filter} />\n        </Label>\n    )\n};\n\nFilterContacts.propTypes = {\n    onFilter: PropTypes.func,\n    filter: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled'\nimport { Form } from 'formik'\n\nexport const FormStyled = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    border-radius: 5px;\n    padding: 4px;\n    margin-bottom: 15px;\n    width: 300px;\n`\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    width: 200px;\n`\n\nexport const Button = styled.button`\n    width: 100px;\n    margin-top: 15px;\n    padding: 5px;\n\n  background-color: #FFFFFF;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: .25rem;\n  box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\n  box-sizing: border-box;\n  cursor: pointer;\n    :hover {\n    border-color: rgba(0, 0, 0, 0.15);\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\n    color: rgba(0, 0, 0, 0.65);}\n \n\n\n\n`","import { Formik, Field } from 'formik';\nimport { object, string } from 'yup';\nimport { FormStyled, Label, Button } from './FormStyled.styled';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact, updateContact } from 'redux/operations';\nimport { getContactsFromState } from 'redux/contactsSlice';\n\n\n\n\nimport toast, { Toaster } from 'react-hot-toast';\n\n\n\n\nconst phoneBookSchema = object().shape({\n    name: string().required(),\n    phone: string().required(),\n});\n\n\n\n\n\nexport const PhonebookForm = () => {\n    // console.log(onSubmit)\n\n    const contacts = useSelector(getContactsFromState);\n    const dispatch = useDispatch();\n\n    return (\n        <Formik\n            validationSchema={phoneBookSchema}\n            initialValues={{\n                name: '',\n                phone: ''}}\n            onSubmit={(values, { resetForm }) => {\n                \n                const existingContact = contacts.filter(contact => { return contact.name === values.name });\n                \n                if (existingContact.length > 0) {\n                    \n                    toast.error(`${values.name} updated`);\n                    dispatch(updateContact(existingContact[0]))\n                    resetForm();\n                    return;\n                }\n\n                dispatch(addContact({ ...values }));\n                resetForm();\n            }}>\n            \n            <FormStyled>\n                 <Toaster />\n                <Label>Name\n                    <Field name=\"name\"/>\n                </Label>\n                <Label>\n                    Number\n                    <Field\n                        type=\"phone\"\n                        name=\"phone\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"/>\n                </Label>\n\n\n            <Button type=\"submit\">Add contact</Button>\n            </FormStyled>\n        </Formik>\n    )\n}\n\n\n\n","import styled from '@emotion/styled'\n\nexport const Section = styled.section`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin-top: 100px;\n    width: 400px;\n    max-width: 800px;\n    margin-inline: auto;\n    background-color: #bff5f5;\n    padding: 20px;\n    box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n    border-radius: 8px;\n    overflow-x: auto;\n`","import { Contacts } from \"../components/Contacts/Contacts\"\nimport { FilterContacts } from \"../components/FilterContacts/FilterContacts\"\nimport { PhonebookForm } from \"../components/PhonebookForm/PhonebookForm\";\nimport { Section } from \"../components/App.styled\"\nimport { getContactsFromState,getIsLoading, getError } from \"redux/contactsSlice\";\nimport { getFilterState } from \"../../src/redux/filterSlice\";\nimport { fetchContacts } from \"redux/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\n\nconst ContactsPage = () => { \n\n\n\n\nconst dispatch = useDispatch();\n  const contacts = useSelector(getContactsFromState);\n  const filter = useSelector(getFilterState); \n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  \n  useEffect(() => {\n\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n\n  \n\n\n\n  const normalizedRequest = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedRequest));\n\n\n\n    return (<>\n     <Section>\n\n\n\n         <h1>Phonebook</h1>\n        \n         < PhonebookForm  />\n         <h2>Contacts</h2>\n         < FilterContacts\n           filter={filter}\n         />\n         {isLoading && !error && <b>Request in progress...</b>}\n         < Contacts\n           contacts={filteredContacts}\n          \n            />\n\n       </Section>\n    </>)\n};\nexport default ContactsPage;"],"names":["Item","styled","Button","ListItem","contact","name","phone","number","id","onClick","length","slice","type","List","Contacts","contacts","dispatch","useDispatch","map","deleteContact","Label","FilterContacts","onFilter","filter","onChange","evt","filterContact","target","value","FormStyled","Form","phoneBookSchema","object","shape","string","required","PhonebookForm","useSelector","getContactsFromState","validationSchema","initialValues","onSubmit","values","resetForm","existingContact","toast","updateContact","addContact","pattern","title","Section","getFilterState","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","normalizedRequest","toLowerCase","filteredContacts","includes"],"sourceRoot":""}